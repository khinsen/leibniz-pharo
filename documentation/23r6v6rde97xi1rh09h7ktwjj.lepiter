{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-10-28T17:55:41.748464+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-10-28T17:56:21.6206+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "ii3cBnyoDQC4hvaIAwIFrw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "{{gtClass:name=RESequence}} is a tool external to Leibniz that uses Leibniz contexts as its user interface. It is a simple numerical tool that solves recurrence equations. It reads the equations to be solved from a Leibniz context in the form of labelled rules, which it compiles to Pharo code."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-10-27T17:41:56.23726+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-10-28T17:55:41.754172+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "it4lt2eoDQC4hf1UDl2LIw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "More sophisticated numerical tools, such as ODE solvers, could be interfaced with Leibniz in the same way. They could also generate and use code in other (more efficient) languages than Pharo."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-10-27T17:45:08.65549+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-10-28T17:23:07.144222+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "F8WCwmeoDQC4iSuCDl2LIw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The inputs to a recurrence equation solver are:\n - a list of recurrence equations\n - a list of initial values for each variable\n {{gtClass:name=RESequence}} reads the equations from a Leibniz context but takes the initial values as standard Pharo arrays. This is most convenient for this specific use case, because it permits the last-minute choice of floating-point vs. exact arithmetic: just write the initial values as floating-point constants or as integer/fraction constants. However, an external tool can read any data it wants from a Leibniz context, including the initial values."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-10-27T17:49:26.110435+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-10-27T17:52:53.896182+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "rKqL0meoDQC4kXI3Dl2LIw=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "Uses:\n\t- {{lzUseContext:name = \"Functions\", subcontext = \"fibonacci\"}}\n\t- {{lzUseContext:name = \"Integers\", subcontext = \"fibonacci\"}}"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-10-27T17:55:31.572575+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-12-29T15:41:17.54675+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "3pRp6GeoDQC44UulDl2LIw=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "The Fibonacci numbers {{lzOp:F : ℕ.nz →  ℕ.nz, subcontext = \"fibonacci\"}} are defined by the recurrence equation\n\t{{lzRule:fibonacciRecurrence: F[n_:ℕ.nz] ⇒ F[n_ - 1] + F[n_ - 2] | n_ > 2, subcontext = \"fibonacci\"}}\nstarting with {{lzRule: F[1] ⇒ 1, subcontext = \"fibonacci\"}} and {{lzRule: F[2] ⇒ 1, subcontext = \"fibonacci\"}}."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-10-27T17:57:20.531314+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-10-27T17:58:39.881662+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "ozKP7meoDQC45FzcDl2LIw=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "These rules are sufficient to compute any Fibonacci number in Leibniz, e.g.\n\t{{lzTerm:F[10], withNormalForm = \"yes\", subcontext = \"fibonacci\"}}."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-10-27T17:59:24.618976+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-10-27T17:59:39.696407+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "iplN9meoDQC46gOyDl2LIw=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "Using {{gtClass:name=RESequence}} we find:"
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-10-27T17:59:44.014477+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-10-28T16:40:39.492815+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "55R192eoDQC47bs7Dl2LIw=="
							},
							"code" : "sequence := RESequence\r\tcontext: (thisSnippet page lzSubcontext: #fibonacci)\r\trules: #('fibonacciRecurrence')\r\tinitialValues: (Dictionary with: #F -> #(1 1)).\rsequence addSteps: 10.\rsequence"
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-10-27T17:43:30.955653+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-10-27T17:43:36.443847+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "S+E8vWeoDQC4h8MkDl2LIw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "###Example: Fibonacci numbers"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-10-28T16:39:47.070976+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-10-28T16:39:54.338513+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "5FyQ8WeoDQC45puiDl2LIw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "###Example: Lotka-Volterra equations"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-10-28T16:39:57.63575+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-10-28T16:40:05.214717+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "z+Lw93qoDQCfCgINBwLgPA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "See [[Lotka-Volterra equations]]"
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2022-10-27T17:41:44.969982+02:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2022-10-27T17:41:44.969982+02:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Solving recurrence equations"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "ffa924b7-67a8-0d00-b884-7ba60e5d8b23"
	}
}