{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-08-17T12:45:57.176997+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-08-21T14:44:07.060791+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "MRej2n2/DQCMzir0D0S9yg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The class {{gtClass:LzSakodaSchellingModel}} implements the Sakoda-Schelling model as computational models are typically implemented today: as software, in a programming language. For someone fluent in Pharo, the correspondence to  [Schelling's paper](https://doi.org/10.1080/0022250X.1971.9989794) is easy to check. The code overview below contains quotes from Schelling's paper that illustrate in particular how vague the description often is, requiring additional choices to be made in an implementation."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-08-17T12:48:41.215638+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-08-17T12:51:31.469084+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "Vhlq5H2/DQCWcmV+D0S9yg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Imagine you are a reviewer for a (so far hypothetical) journal that publishes papers with accompanying software and actually asks the reviewers to verify that the software faithfully implements the methods described in the paper. Your job thus is to compare the code in the class {{gtClass:LzSakodaSchellingModel}} to Schelling's paper. Is is a faithful implementation?"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-08-17T12:51:32.295247+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-08-18T14:12:43.291079+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "KJCc7n2/DQCfX7Q4D0S9yg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Spoiler: the answer is neither \"yes\" nor \"no\"."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-08-17T16:45:49.634081+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-08-17T16:47:53.203651+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "NId+NIG/DQCzuUkcB3Bb7w=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "Press the \"inspect\" button on the code snippet below to see a randomly initialized board. Cells with a red border hold an unhappy agent. Use the \"One pass\" and \"Animation\" buttons to run the simulation."
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-08-17T16:46:07.486021+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-08-18T16:59:16.340274+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "C+mONYG/DQCzwAUBB3Bb7w=="
							},
							"code" : "LzSakodaSchellingModel new\r\tinitializeBoardWithSize: 13 @ 16\r\tfractionEmpty: 1/4"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-08-18T16:59:36.570158+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-08-18T17:00:03.502523+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "7+Wfg5W/DQCcDTZEAsLe9w=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "For reproducible simulations, specify an integer random seed:"
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-08-18T17:00:08.77482+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-08-18T17:00:24.052215+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "tVWLhZW/DQCdTGllAsLe9w=="
							},
							"code" : "(LzSakodaSchellingModel fromRandomSeed: 42)\r\tinitializeBoardWithSize: 13 @ 16\r\tfractionEmpty: 1/4"
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-08-17T16:45:28.741409+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-08-18T14:12:55.354678+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "h74/M4G/DQCzJJoxB3Bb7w=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "##Running a simulation"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-21T14:27:00.133311+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-21T14:27:23.650056+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "2uxhu8+/DQC3zC/7DhLKFQ=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "**Quote:** *To be specific: divide the area into squares like a checkerboard (but without any alternating colors) and distribute colored chips at random among the squares, leaving some squares blank. One chip occupies one square.*"
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-21T14:32:21.537131+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-21T14:32:26.776896+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "2R+Kzs+/DQC5ROa/DhLKFQ=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "**Quote:** *In order that people be able to move there must be some vacant spaces; in order that they have significant choice of where to move there must be quite a few. While it is interesting to study what happens if the supply of vacant spaces is restricted, unless one is actually studying the influence of restricted supply the vacancies need to be a reasonably high proportion of the total. It turns out that 25% to 30% vacancies allows fair freedom of movement without making the board too empty.*"
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-21T14:36:02.765141+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-21T14:36:07.249553+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "iM2528+/DQC6NYL/DhLKFQ=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "**Quote:** *As in the linear model, I make an initial distribution at random. It might make sense to distribute the blank spaces evenly, but I let them be determined at random, too. (It makes some difference.) In some cases I use equal numbers of blacks and whites, in others a ratio of two to one or larger.*"
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-18T14:31:30.119141+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-18T17:14:06.467801+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "mHTzcZO/DQC9exVdDWV/2g=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "The board is represented by an {{gtClass:Array2D}}. Each cell receives randomly one of three possible states: empty, a black agent, or a white agent.\n{{gtMethod:name=LzSakodaSchellingModel>>#initializeBoardWithSize:fractionEmpty:|expanded}}\n"
									}
								]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-08-18T17:12:36.210049+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-08-18T17:12:45.972741+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "6E4YspW/DQCEydMkCrbz6g=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "####The checkerboard"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-21T14:33:00.163393+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-21T14:33:27.460995+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "EozX0M+/DQC5jq6/DhLKFQ=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "**Quote:** *The rule of movement, then, is that an individual discontent with his own neighborhood moves to the nearest vacant spot that surrounds him with a neighborhood that meets his demands.*"
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-17T16:48:46.216924+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-18T14:44:45.703274+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "FPcEP4G/DQC4omNCB3Bb7w=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "Moving an agent does nothing if the agent is happy at its current location. Otherwise, it is moved to the nearest empty cell at which it would be happy.\n{{gtMethod:name=LzSakodaSchellingModel>>#moveAgentAt:|expanded}}"
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-17T16:50:49.234782+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-18T14:42:42.171243+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "xxFaRoG/DQC9f4H3B3Bb7w=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "The new location for an unhappy agent is found in three steps. First, make a list of all currently empty cells:\n{{gtMethod:name=LzSakodaSchellingModel>>#emptyCells|expanded}}"
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [
												{
													"__type" : "textSnippet",
													"children" : {
														"__type" : "snippets",
														"items" : [ ]
													},
													"createEmail" : {
														"__type" : "email",
														"emailString" : "<unknown>"
													},
													"createTime" : {
														"__type" : "time",
														"time" : {
															"__type" : "dateAndTime",
															"dateAndTimeString" : "2023-08-21T14:38:18.450868+02:00"
														}
													},
													"editEmail" : {
														"__type" : "email",
														"emailString" : "<unknown>"
													},
													"editTime" : {
														"__type" : "time",
														"time" : {
															"__type" : "dateAndTime",
															"dateAndTimeString" : "2023-08-21T14:38:32.211174+02:00"
														}
													},
													"uid" : {
														"__type" : "uid",
														"uidString" : "jDvQ48+/DQC6g2NQDhLKFQ=="
													},
													"paragraphStyle" : {
														"__type" : "textStyle"
													},
													"string" : "**Quote:** *I specify the rule for moving, which is usually to move to the nearest satisfactory square, with 'nearest' measured by the number of squares one traverses horizontally and vertically.*"
												},
												{
													"__type" : "textSnippet",
													"children" : {
														"__type" : "snippets",
														"items" : [ ]
													},
													"createEmail" : {
														"__type" : "email",
														"emailString" : "<unknown>"
													},
													"createTime" : {
														"__type" : "time",
														"time" : {
															"__type" : "dateAndTime",
															"dateAndTimeString" : "2023-08-17T16:55:54.224916+02:00"
														}
													},
													"editEmail" : {
														"__type" : "email",
														"emailString" : "<unknown>"
													},
													"editTime" : {
														"__type" : "time",
														"time" : {
															"__type" : "dateAndTime",
															"dateAndTimeString" : "2023-08-17T16:56:54.476082+02:00"
														}
													},
													"uid" : {
														"__type" : "uid",
														"uidString" : "VtiHWIG/DQCEGdHDB3Bb7w=="
													},
													"paragraphStyle" : {
														"__type" : "textStyle"
													},
													"string" : "The distance is computed via horizontal and vertical steps only:\n{{gtMethod:name=Point>>#manhattanDistanceTo:|expanded}}"
												}
											]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-17T16:54:13.348276+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-18T14:42:55.641097+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "25WEUoG/DQCAzOmxB3Bb7w=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "Next, compute the distance of each empty cell from the agent's current cell, and sort the cell list by this distance:\n{{gtMethod:name=LzSakodaSchellingModel>>#emptyCellPositionsSortedByDistanceFrom:|expanded}}"
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-17T16:58:06.535491+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-18T14:43:29.667971+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "7b9qYIG/DQCGJeCUB3Bb7w=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "Third, the elements of this list are checked one by one, starting from the first, until a cell is found where the agent finds happiness:\n{{gtMethod:name=LzSakodaSchellingModel>>#nearestEmptyCellProvidingHappinessTo:currentlyAt:|expanded}}"
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-21T14:39:52.026733+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-21T14:39:58.098822+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "FRpk6c+/DQC60scTDhLKFQ=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "**Quote:** *In some cases the order of move was determined merely by position on the board, such as working generally from left to right; it is also interesting to see what happens if all of one color completes its moves before the other color moves. It is possible, of course, to test the sensitivity of the results with respect to the order of moves. Because what is reported here has all been done by hand and eye, no exact rule for the order of moves has been adhered to strictly.*"
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-21T14:40:01.624584+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-21T14:40:53.797711+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "jor26c+/DQC7HEinDhLKFQ=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "A full pass over the board examines all cells, row by row, from top left to bottom right:\n{{gtMethod:name=LzSakodaSchellingModel>>#fullPass|expanded}}"
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-21T14:28:05.644692+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-21T14:28:05.644692+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "IopJv8+/DQC4HPe2DhLKFQ=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : ""
									}
								]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-08-18T17:12:48.999878+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-08-18T17:12:57.695961+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "6pzRvJO/DQC+H3JbDWV/2g=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "####Moving agents to happier places"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-21T14:34:40.290428+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-21T14:34:47.300695+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "lV7P1s+/DQC56yf4DhLKFQ=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "**Quote:** *Color preferences with respect to one's neighborhood can be defined either in absolute terms—the number of one's own color within the eight surrounding squares—or in relative terms—the ratio of neighbors of one's own color to opposite color among the eight surrounding squares. If all squares were occupied, every absolute number would correspond to a ratio; but because one may have anywhere from zero up to eight neighbors, there are eight denominators and therefore eight numerators to specify in describing one's neighborhood demands.*"
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-18T14:57:21.732042+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-18T14:59:56.267245+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "aTFvzpO/DQC/omw9DWV/2g=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "An agent is happy at a position if at least half of all agents in its neighborhood are of the same kind as itself:\n{{gtMethod:name=LzSakodaSchellingModel>>#agent:isHappyAt:|expanded}}"
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-18T15:15:46.413793+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-18T17:22:33.167297+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "yE1HEJS/DQCA+GJIDuAuqA=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "The fraction of same-kind agents is computed over all non-empty neighboring cells. If all neighboring cells are empty, the fraction is defined to be 1.\n{{gtMethod:name=LzSakodaSchellingModel>>#fractionOf:inNeighborhoodOfCell:|expanded}}"
									}
								]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-08-21T14:28:34.258428+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-08-21T14:28:40.701518+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "Ox/+wM+/DQC4I9o9DhLKFQ=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "####Happiness"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-21T14:26:28.185479+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-21T14:30:59.148474+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "CG56uc+/DQC3vt87DhLKFQ=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "**Quote:** *A 'neighborhood' is defined by reference to the surrounding squares; each square on a checkerboard has eight immediate neighbors, so a convenient minimum-sized neighborhood for an individual is his own square plus the eight surrounding; larger 'neighborhoods' can be considered by including the 24 surrounding squares in a 5 x 5 area, etc. An actual board, in contrast to a conceptually infinite expanse, has sides and corners; but, then, so probably do most natural areas, and this may be no disadvantage. Along the edge of the board a square has only five neighboring squares, and in a corner but three.*"
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-18T15:20:20.939461+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-18T16:49:13.751798+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "Nz+kIJS/DQCHEZ/QDuAuqA=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "The neighborhood of a cell consists of the cells surrounding it. There are at most eight neighbors to each cell, but only five if the cell is on an edge of the board, and three if the cell is a corner.\n{{gtMethod:name=LzSakodaSchellingModel>>#neighborhoodOf:do:|expanded}}"
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-18T15:00:06.2263+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-08-18T15:00:06.2263+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "5CM92JO/DQCEENzVDWV/2g=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : ""
									}
								]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-08-18T14:57:00.450364+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-08-21T14:28:45.576126+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "1noqzZO/DQC/VPXFDWV/2g=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "####Neighborhoods"
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-08-17T13:15:39.194474+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-08-17T13:15:51.253031+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "uXLaRH6/DQCD3GHZB+UXdg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "###Overview of the code"
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2023-08-16T14:55:37.483397+02:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2023-08-16T14:55:37.483397+02:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "A Pharo implementation of the Sakoda-Schelling model"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "a0c2898c-6bbf-0d00-8c69-14260dfd5470"
	}
}