{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-21T18:40:00.85287+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-22T15:53:47.154113+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "Z+c3mlmeDQCprwtdDFxIrA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Heron’s algorithm, described in the 1st century CE by Heron of Alexandria, computes the square root of an input number iteratively, starting from an initial estimate, until the result is correct within a given tolerance. It is a special case of Newton’s method for finding roots of algebraic equations."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-21T18:46:07.713783+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-22T15:50:58.566753+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "e72hsVmeDQCptl9FDFxIrA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Uses {{lzUseContext:name = \"Real numbers\"}}, {{lzUseContext:name = \"Absolute value\"}}"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-21T18:44:28.181235+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-21T20:34:39.575962+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "QG22q1meDQCpsfnkDFxIrA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Let {{lzOp:heron(x:ℝ.nn, ε:ℝ.p, e:ℝ.nn) : ℝ.nn}} be the result of Heron’s algorithm for computing the square root of x up to tolerance ε, starting from estimate e."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-21T20:36:14.362561+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-24T17:15:18.995148+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "Bj5uO1ueDQC5M6kWDUJpkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The first step of the algorithm is to check if the current estimate is good enough, in which case it is the final result:\n\t{{lzRule:heron[1]: heron(x_:ℝ.nn, ε_:ℝ.p, e_:ℝ.nn) ⇒ e_ | abs(x_ - e_^(2)) < ε_}}"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-21T20:39:51.94413+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-21T20:40:07.190156+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "5ErKRlueDQC5NcbbDUJpkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Note that the tolerance applies to x and not to √(x)."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-21T20:40:16.701307+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-24T17:15:35.853687+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "sTNvSVueDQC5N7ovDUJpkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Otherwise, a new estimate is computed by taking the average of e and x ÷ e:\n\t{{lzRule:heron[2]: heron(x_:ℝ.nn, ε_:ℝ.p, e_:ℝ.nn) ⇒ heron(x_, ε_, 1/2 × (e_ + (x_ ÷ e_)))}}"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-21T20:44:13.562544+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-26T06:51:38.784567+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "hnoCV1ueDQC5O+k2DUJpkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "For convenience, we also allow no initial estimate to be supplied, using a default value of 1:\n\t{{lzOp:heron(x:ℝ.nn, ε:ℝ.p) : ℝ.nn}}\n\t{{lzRule:heron(x_:ℝ.nn, ε_:ℝ.p) ⇒ heron(x_, ε_, 1)}}\nThe algorithm will always converge starting from 1, because √(x) is always in the interval [1..x] (for x > 1) or [x..1] (for x < 1). However, a better initial estimate makes it converge faster."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-26T06:51:47.709545+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-29T15:52:23.038258+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "RxooTLSeDQCHAv/bDBBOxg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "###Example"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-26T06:55:52.222838+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-26T06:56:20.136911+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "ggiEWbSeDQCHBkYqDBBOxg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The algorithm is straightforward to use:\n\t{{lzTerm:heron(2, 1/10), withNormalForm = \"yes\"}}"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-08-10T15:11:44.553196+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-08-23T10:26:03.019516+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "dyfXhkSiDQC1T4iiB/KFPg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "To see its convergence properties, it is more useful to look at the function\n\t{{lzOp:heronError(x:ℝ.nn) : ℝ.p → ℝ.nn, subcontext = \"convergence\"}},\n(uses {{lzUseContext:name = \"Functions\", subcontext = \"convergence\"}}), computed as:\n\t{{lzRule:heronError(x_:ℝ.nn)[ε_:ℝ.p] ⇒ abs(heron(x_, ε_)^(2) - x_), subcontext = \"convergence\"}}"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-08-10T15:16:19.553711+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-29T16:06:53.207467+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "+oYyl0SiDQC1U296B/KFPg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "A convergence plot for the square root of 2 (uses {{lzUseContext:name = \"Plotting\", subcontext = \"convergence\"}}):\n\t{{lzTerm:linePlot(ε-values, heronError(2)[ε-values]), subcontext = \"convergence\"}}\nwith\n\t{{lzOp:ε-values : Array1D(ℝ.p), subcontext = \"convergence\"}} and\n\t{{lzRule:ε-values ⇒ {[ 1, 1/2, 1/3, 1/5, 1/10, 1/100, 1/1000 ]}, subcontext = \"convergence\"}}"
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2022-06-21T18:39:33.799325+02:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2022-06-21T18:39:33.799325+02:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Heron's algorithm for computing square roots"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "e7cc369a-599e-0d00-a9ae-d97e0c5c48ac"
	}
}