Extension { #name : #TLeAnnotationParseNodeVisitor }

{ #category : #'*Leibniz2' }
TLeAnnotationParseNodeVisitor >> visitTopLevelEqualityAxiom: aLzTopLevelEqualityAxiomNode [
]

{ #category : #'*Leibniz2' }
TLeAnnotationParseNodeVisitor >> visitTopLevelFunctionRule: aLzTopLevelFunctionRuleNode [
]

{ #category : #'*Leibniz2' }
TLeAnnotationParseNodeVisitor >> visitTopLevelOp: aLzTopLevelOpNode [
]

{ #category : #'*Leibniz2' }
TLeAnnotationParseNodeVisitor >> visitTopLevelRewriteRule: aLzTopLevelRewriteRuleNode [
]

{ #category : #'*Leibniz2' }
TLeAnnotationParseNodeVisitor >> visitTopLevelSort: aLzTopLevelSortNode [
]

{ #category : #'*Leibniz2' }
TLeAnnotationParseNodeVisitor >> visitTopLevelSpecialTerms: aLzTopLevelSpecialTermsNode [
]

{ #category : #'*Leibniz2' }
TLeAnnotationParseNodeVisitor >> visitTopLevelSubsort: aLzTopLevelSubsortNode [
]

{ #category : #'*Leibniz2' }
TLeAnnotationParseNodeVisitor >> visitTopLevelTerm: aLzTopLevelTermNode [
]

{ #category : #'*Leibniz2' }
TLeAnnotationParseNodeVisitor >> visitTopLevelUseContext: aLzTopLevelUseContextNode [
]
